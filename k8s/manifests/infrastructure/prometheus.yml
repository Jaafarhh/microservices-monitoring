apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.46.0
          ports:
            - containerPort: 9090
          args:
            - --enable-feature=exemplar-storage
            - --config.file=/etc/prometheus/prometheus.yml
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-alerts
              mountPath: /etc/prometheus/rules
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-configmap
        - name: prometheus-alerts
          configMap:
            name: prometheus-alerts
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
  prometheus.yml: |
    global:
      scrape_interval: 2s
      evaluation_interval: 2s

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager.default.svc.cluster.local:9093

    rule_files:
      - /etc/prometheus/rules/*.yml

    scrape_configs:
      - job_name: 'api-gateway'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['api-gateway.default.svc.cluster.local:9000'] ## only for demo purposes don't use host.docker.internal in production
      - job_name: 'product-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['product-service.default.svc.cluster.local:8080'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Product Service'
      - job_name: 'order-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['order-service.default.svc.cluster.local:8081'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Order Service'
      - job_name: 'inventory-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['inventory-service.default.svc.cluster.local:8082'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Inventory Service'
      - job_name: 'notification-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['notification-service.default.svc.cluster.local:8083'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Notification Service'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-alerts
data:
  alerts.yml: |
    groups:
      - name: microservices_alerts
        rules:
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            annotations:
              summary: "Service {{ $labels.application }} is down"
              description: "Service {{ $labels.application }} has been down for more than 1 minute"

          - alert: HighResponseTime
            expr: rate(http_server_requests_seconds_sum{uri!="/actuator/prometheus"}[1m]) / rate(http_server_requests_seconds_count{uri!="/actuator/prometheus"}[1m]) > 0.5
            for: 2m
            annotations:
              summary: "High response time on {{ $labels.application }}"
              description: "Service response time is above 500ms"

          - alert: OrderProcessingFailures
            expr: rate(resilience4j_circuitbreaker_calls_total{kind="failed", name="inventory"}[1m]) > 0
            for: 1m
            annotations:
              summary: "Order processing failures in {{ $labels.application }}"
              description: "Circuit breaker showing failures in order processing"

          - alert: LowInventoryStock
            expr: inventory_quantity < 10
            for: 10s
            labels:
              severity: warning
            annotations:
              summary: "Low inventory for product {{ $labels.skuCode }}"
              description: "Product {{ $labels.skuCode }} has inventory below 10 units"